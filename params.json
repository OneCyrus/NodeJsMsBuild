{"name":"NodeJsMsBuild","tagline":"MsBuild tasks for NodeJS tools","body":"NodeJsMsBuild\r\n=============\r\n\r\n![Alt text](https://rawgit.com/XVincentX/NodeJsMsBuild/master/NodeJsMsBuild.png)\r\n\r\n# MsBuild tasks for NodeJS tools\r\n\r\nBuild status: [![Build status](https://ci.appveyor.com/api/projects/status/ywwyx7c541p3e9cx/branch/master)](https://ci.appveyor.com/project/XVincentX/nodejsmsbuild/branch/master)\r\nNuget downloads: [![Nuget Downloads](http://img.shields.io/nuget/dt/NodeJsMsBuild.svg)](http://img.shields.io/nuget/dt/NodeJsMsBuild.svg)\r\n\r\n[CI Nuget feed](https://ci.appveyor.com/nuget/nodejsmsbuild-5f8xp8p45090)\r\n\r\n\r\nThis project is a collection of utilities that will inject some targets/files into your\r\nVisual Studio project and integrating NodeJs tools.\r\n\r\n\r\n**NOTE:** This project is all about plain MsBuild task. No tools will be inserted\r\ninto your project. They are up to you.\r\n\r\n## Yes but why?\r\nAt first, there are a [lot](https://www.nuget.org/packages/nodejs-v.0.8.16/),a\r\n[lot](https://www.nuget.org/packages/nji/) and a [lot](https://www.nuget.org/packages/Node.js/)\r\nof nuget packages claiming NodeJS support. I know that more will come in near future.\r\nThe same is for Bower, Grunt, Gulp and other tools.\r\nI do not know which one to choose, and which one will be updated time\r\nafter time. Futhermore, a lot of users (like me) have got a global npm\r\ninstallation and want to take advantage of that one. For this reason I prefer to\r\ninstall in your project only the targets with several search options. The rest\r\nis up to you.\r\n\r\nThis project is born after [this article](http://www.dotnet-programming.com/post/2014/07/11/Integrate-NodeJS-tools-in-Visual-StudioTFS.aspx).\r\n\r\nIf you're looking for binaries, point your browser to the\r\n[nuget package](https://www.nuget.org/packages/NodeJSMsBuild/)\r\n\r\n## I want to build on my own\r\n```javascript\r\ngrunt\r\n```\r\nThis will output a nuget package that you may upload on your nuget feed.\r\n\r\nClean generated code\r\n```javascript\r\ngrunt clean //I think it does not work now.\r\n```\r\n\r\n## Gimme the bits\r\nOpen your Visual Studio copy and search for _NodeJsMsBuild_ package.\r\nOnce installed, it will\r\n* Insert into your project a **Gruntfile.js** and a **gulpfile.js**. Both of them\r\n have got:\r\n  * A _shared_ task\r\n  * A _default_ task\r\n  * A _Debug_ task\r\n  * A _Release_ task\r\n\r\n  All of these are empty and all depends from _shared_.\r\n\r\n* The _Install.ps1_ script will detect presence of package managers and will\r\nremove from project (but not delete from file system) the unnecessary task files.\r\nIf you have got both of task runners (will you?), both files will be leaved in\r\nyour project.\r\n\r\n* 3 named targets will be imported into your projects. These are:\r\n  * **CleanNodeJsFiles**: this task will delete all _Javascript_ filed created by\r\n  Typescript compilation process (the .js and .js.map). Then it will delete the\r\n  entire _node_modules/_ directory and _typings_ folder as well.\r\n  * **RestoreNodeJsPackages**: This target will run the following commands:\r\n    * npm install\r\n    * tsd reinstall\r\n    * bower install\r\n  * **RunJsBuildTasks**: This target will run grunt/gulp  tasks based on your\r\n  configuration (Debug/Release).\r\n\r\nThe process will not fail if the executables will not be found, but a warning\r\nmessage will be emitted.\r\n\r\n## How do you detect presence of NodeJS modules?\r\nTo go into details, it will:\r\n* Check for commands into your __PATH__. This will be fine if you install NodeJS,\r\nNPM and other modules as global ones.\r\n* Check for commands into _./bin_ path of your project. This is the case when\r\nyou do not want to install packages into your system, but as standalone executables.\r\n* Check into *node_modules* bin folder of your project.\r\n\r\nYou can make this using nuget package manager too.\r\n[NodeJs](http://www.nuget.org/packages/Node.js/),\r\n[Npm](http://www.nuget.org/packages/Npm/),\r\n[Bower](http://www.nuget.org/packages/Bower/),\r\n[Gulp](http://www.nuget.org/packages/Gulp.js/) and\r\n[Grunt](http://www.nuget.org/packages/Grunt.js/)\r\nare avaiable as nuget packages.\r\n\r\n  There is no support for _tsd_ at the moment, but I think [he]() will add it soon\r\n  if you ask him.\r\n* Check for binaries into _node_modules_ directory. This is the case if you have\r\ngot Node and NPM installed in your **PATH**, but all the other tools are installed\r\nas _local_ packages.\r\n\r\nIf you think I mess some scenario, please open an [issue](https://github.com/XVincentX/NodeJsMsBuild/issues)\r\n\r\nThe project logo was kindly assembled by [R.Iazzetta](https://www.linkedin.com/profile/view?id=299757718)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}